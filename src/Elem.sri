
module Elem where

import Data.Char
import Seri.SMT.SMT

class Element a where
    toElem :: Char -> a
    fromElem :: a -> Char
    freeElem :: Query a
    
instance Element Integer where
    toElem = ord
    fromElem = chr
    freeElem = do
        x <- free
        assert (x >= 0 && x < 256)
        return x

toElemString :: (Element e) => String -> [e]
toElemString = map toElem

fromElemString :: (Element e) => [e] -> String
fromElemString = map fromElem

-- Create a free element string of fixed length.
freeElemString :: (Element e) => Integer -> Query [e]
freeElemString x = sequence (replicate x freeElem)

-- A sample integer Element.
integerElem :: Integer
integerElem = 0

